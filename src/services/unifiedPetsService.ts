import { supabasePetsService, Pet, CreatePetData } from './supabasePetsService';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Supabase
const useSupabase = !!import.meta.env.VITE_SUPABASE_URL && !!import.meta.env.VITE_SUPABASE_ANON_KEY;

console.log('üêï Pets Service:', useSupabase ? 'Supabase' : 'Local Server');

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–∏—Ç–æ–º—Ü–µ–≤
export const petsService = useSupabase ? supabasePetsService : {
  // –î–µ–º–æ-—Ä–µ–∂–∏–º –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
  async getPets(userId: number) { return { success: false, message: '–î–µ–º–æ —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω' }; },
  async createPet(petData: CreatePetData) { return { success: false, message: '–î–µ–º–æ —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω' }; },
  async updatePet(petId: number, petData: Partial<CreatePetData>) { return { success: false, message: '–î–µ–º–æ —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω' }; },
  async deletePet(petId: number) { return { success: false, message: '–î–µ–º–æ —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω' }; },
  async uploadPetPhoto(petId: number, file: File) { return { success: false, message: '–î–µ–º–æ —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω' }; }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã
export type { Pet, CreatePetData };
