import https from 'https';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { execSync } from 'child_process';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
let serverOptions = {};

try {
  // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
  if (fs.existsSync('./cert.pem') && fs.existsSync('./key.pem')) {
    serverOptions = {
      key: fs.readFileSync('./key.pem'),
      cert: fs.readFileSync('./cert.pem')
    };
    console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã');
  } else {
    console.log('üîê –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...');
    
    // –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    execSync('openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "/C=RU/ST=Moscow/L=Moscow/O=Dev/CN=localhost"', { stdio: 'inherit' });
    
    serverOptions = {
      key: fs.readFileSync('./key.pem'),
      cert: fs.readFileSync('./cert.pem')
    };
    
    console.log('‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
  }
} catch (error) {
  console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑ HTTPS');
  console.warn('‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã –∫–∞–º–µ—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è HTTPS!');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è MIME —Ç–∏–ø–∞
function getMimeType(filePath) {
  const ext = path.extname(filePath).toLowerCase();
  const mimeTypes = {
    '.html': 'text/html',
    '.js': 'application/javascript',
    '.css': 'text/css',
    '.json': 'application/json',
    '.png': 'image/png',
    '.jpg': 'image/jpeg',
    '.jpeg': 'image/jpeg',
    '.gif': 'image/gif',
    '.svg': 'image/svg+xml',
    '.ico': 'image/x-icon',
    '.woff': 'font/woff',
    '.woff2': 'font/woff2',
    '.ttf': 'font/ttf',
    '.eot': 'application/vnd.ms-fontobject'
  };
  return mimeTypes[ext] || 'application/octet-stream';
}

// –ü—Ä–æ—Å—Ç–æ–π HTTP/HTTPS —Å–µ—Ä–≤–µ—Ä
const requestHandler = (req, res) => {
  // CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
  
  if (req.method === 'OPTIONS') {
    res.writeHead(200);
    res.end();
    return;
  }
  
  let filePath = path.join(__dirname, 'dist', req.url === '/' ? 'index.html' : req.url);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ dist –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
  if (!filePath.startsWith(path.join(__dirname, 'dist'))) {
    res.writeHead(403);
    res.end('Forbidden');
    return;
  }
  
  // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º index.html (–¥–ª—è SPA)
  if (!fs.existsSync(filePath)) {
    filePath = path.join(__dirname, 'dist', 'index.html');
  }
  
  try {
    const data = fs.readFileSync(filePath);
    const mimeType = getMimeType(filePath);
    
    res.writeHead(200, {
      'Content-Type': mimeType,
      'Content-Length': data.length
    });
    res.end(data);
  } catch (error) {
    res.writeHead(404);
    res.end('File not found');
  }
};

const PORT = process.env.PORT || 8443;

if (serverOptions.key && serverOptions.cert) {
  // –ó–∞–ø—É—Å–∫–∞–µ–º HTTPS —Å–µ—Ä–≤–µ—Ä
  const server = https.createServer(serverOptions, requestHandler);
  
  server.listen(PORT, () => {
    console.log(`üöÄ HTTPS —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ https://localhost:${PORT}`);
    console.log(`üìπ –ö–∞–º–µ—Ä–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ —ç—Ç–æ–º—É –∞–¥—Ä–µ—Å—É!`);
    console.log(`‚ö†Ô∏è  –ë—Ä–∞—É–∑–µ—Ä –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞`);
    console.log(`üí° –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –∏–ª–∏ "Advanced -> Proceed to localhost` + `"`);
  });
} else {
  console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å HTTPS —Å–µ—Ä–≤–µ—Ä');
  process.exit(1);
}
